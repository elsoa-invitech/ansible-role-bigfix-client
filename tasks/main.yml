---
- name: Load vars based on OS distribution or family
  include_vars: "{{ lookup('ansible.builtin.first_found', params) }}"
  vars:
    params:
      files:
        - "{{ bigfix_client_override_vars[bigfix_client_distribution] | default(bigfix_client_distribution) }}.yml"
        - "{{ bigfix_client_override_vars[bigfix_client_os_family] | default(bigfix_client_os_family) }}.yml"
      paths:
        - 'vars'

- name: Failing due to undetermined OS
  fail:
    msg: OS could not be determined.
  when: bigfix_client_file_sum is not defined

- name: Check for BigFix
  stat:
    path: "{{ bigfix_client_conf_dir }}/.ansible_installed"
  register: bigfix_installed

- name: Run the BigFix OS install
  include_tasks: install.yml
  when: not bigfix_installed.stat.exists or bigfix_update is defined

- name: Determine if masthead already exists
  stat:
    path: "{{ bigfix_client_conf_dir }}/actionsite.afxm"
  register: masthead_file

- name: Download masthead from BigFix Server
  get_url:
    url: "http://{{ bigfix_client_server_name }}:{{ bigfix_client_server_port }}/masthead/masthead.afxm"
    dest: "{{ bigfix_client_conf_dir }}/actionsite.afxm"
  when: not masthead_file.stat.exists

- name: determine if besclient.config already exists
  stat:
    path: "{{ bigfix_client_var_dir }}/besclient.config"
  register: besclient_file

- name: Generate besclient.config file
  ansible.builtin.template:
    src: templates/besclient.j2
    dest: "{{ bigfix_client_var_dir }}/besclient.config"
    mode: "0644"
  when: not besclient_file.stat.exists

- name: Start the service
  service:
    name: "{{ bigfix_client_service_name }}"
    state: restarted
    enabled: true
